import EasyMDE from 'easymde';
declare const _sfc_main: import("vue").DefineComponent<{
    modelValue: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    options: {
        type: null;
        required: false;
    };
}, {
    textArea: import("vue").Ref<HTMLTextAreaElement | null | undefined>;
    easyMDEInstance: null;
    props: {
        modelValue: string;
        options?: EasyMDE.Options | undefined;
    };
    emit: {
        (type: 'update:modelValue', value: string): void;
        (type: 'change', value: string): void;
        (type: 'blur'): void;
    };
    innerValue: import("vue").Ref<string>;
    clear: () => void;
    getMDEInstance: () => EasyMDE | null;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("update:modelValue" | "change" | "blur")[], "update:modelValue" | "change" | "blur", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    modelValue: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    options: {
        type: null;
        required: false;
    };
}>> & {
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
    onChange?: ((...args: any[]) => any) | undefined;
    onBlur?: ((...args: any[]) => any) | undefined;
}, {
    modelValue: string;
}>;
export default _sfc_main;
